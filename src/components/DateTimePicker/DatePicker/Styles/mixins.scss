// strip units helper
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

$picker-input-padding-vertical: max(
  (
      round(
          (
              (
                (
                    strip-units($picker-input-height-s) -
                      strip-units($picker-font-size-m) *
                      strip-units($picker-line-height-m)
                  ) / 2
              )
            ) * 10
        ) / 10
    ) - strip-units($picker-border-width),
  0
);

// Picker padding
@mixin picker-padding($input-height, $font-size, $padding-horizontal) {
  // font height is probably 22.0001, So using floor is better
  $font-height: floor(
      strip-units($font-size) * strip-units($padding-horizontal)
    ) + 2;
  $padding-top: max(
    calc((strip-units($input-height) - strip-units($font-height)) / 2),
    0
  );
  $padding-bottom: max(
    strip-units($input-height) - strip-units($font-height) -
      strip-units($padding-top),
    0
  );
  padding: $padding-top $padding-horizontal $padding-bottom 0;
}

@mixin picker-padding-rtl($input-height, $font-size, $padding-horizontal) {
  // font height is probably 22.0001, So using floor is better
  $font-height: floor(
      strip-units($font-size) * strip-units($padding-horizontal)
    ) + 2;
  $padding-top: max(
    calc((strip-units($input-height) - strip-units($font-height)) / 2),
    0
  );
  $padding-bottom: max(
    strip-units($input-height) - strip-units($font-height) -
      strip-units($padding-top),
    0
  );
  padding: $padding-top 0 $padding-bottom $padding-horizontal;
}

// Input placeholder text mixin
@mixin placeholder($color: var(--picker-input-placeholder-color)) {
  // Firefox
  &::-moz-placeholder {
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }

  &::placeholder {
    color: $color;
  }

  &:placeholder-shown {
    text-overflow: ellipsis;
  }
}

// Input sizes
@mixin input-size-1() {
  font-size: $picker-font-size-l;
  height: $picker-input-height-l;
  line-height: $picker-line-height-l;
  padding: $picker-input-padding-vertical calc(#{$space-xxl} + 4px)
    $picker-input-padding-vertical $space-s;
}

@mixin input-size-2() {
  font-size: $picker-font-size-m;
  height: $picker-input-height-m;
  line-height: $picker-line-height-m;
  padding: $picker-input-padding-vertical $picker-input-padding-horizontal-m;
}

@mixin input-size-3() {
  font-size: $picker-font-size-s;
  height: $picker-input-height-s;
  line-height: $picker-line-height-s;
  padding: $picker-input-padding-vertical $picker-input-padding-horizontal-s;
}

// Input visual states
@mixin active(
  $borderColor: var(--picker-border-color-active),
  $hoverBorderColor: var(--picker-input-border-color-active),
  $outlineColor: var(--picker-outline-color)
) {
  border-color: $hoverBorderColor;
  box-shadow: $picker-input-outline-offset $picker-outline-blur
    $picker-outline-width $outlineColor;
  border-right-width: var(--picker-border-width);
  outline: 0;
}

@mixin hover($color: var(--picker-input-border-color-hover)) {
  border-color: $color;
  border-right-width: var(--picker-border-width);
}

@mixin disabled() {
  cursor: not-allowed;
  opacity: $disabled-alpha-value;
}
