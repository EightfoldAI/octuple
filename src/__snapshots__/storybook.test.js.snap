// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Accordion List Horizontal 1`] = `
<div
  className="my-list-class"
  style={Object {}}
>
  <div
    style={
      Object {
        "paddingLeft": "16px",
      }
    }
  >
    <h2>
      Header
    </h2>
  </div>
  <ul
    className="listContainer"
  >
    <li
      className="listItem my-list-item-class"
      style={
        Object {
          "padding": "8px",
        }
      }
    >
      <div
        className="accordionContainer"
      >
        <div
          aria-controls="1-content"
          aria-expanded={false}
          className="accordionSummary"
          id="1-header"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="button"
          tabIndex={0}
        >
          <div
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
              }
            }
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M12 20C7.59 20 4 16.41 4 12S7.59 4 12 4 20 7.59 20 12 16.41 20 12 20M16.59 7.58L10 14.17L7.41 11.59L6 13L10 17L18 9L16.59 7.58Z"
                  style={
                    Object {
                      "fill": "green",
                    }
                  }
                />
              </svg>
            </span>
            <div
              style={
                Object {
                  "margin": "0 12px 0 5px",
                }
              }
            >
              Notification testing
            </div>
            <span
              className="badge header6 active"
            >
              2
            </span>
          </div>
          <span
            aria-hidden={false}
            className="accordionIcon iconWrapper"
            role="presentation"
          >
            <svg
              role="presentation"
              style={
                Object {
                  "height": "20px",
                  "width": "20px",
                }
              }
              viewBox="0 0 24 24"
            >
              <path
                d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                style={
                  Object {
                    "fill": "currentColor",
                  }
                }
              />
            </svg>
          </span>
        </div>
        <div
          aria-labelledby="1-header"
          className="accordionBodyContainer"
          id="1-content"
          role="region"
        >
          <div
            className="accordionBody showBorderTop"
          >
            Body 2 text used here. Bottom bars are sticky sections that
        can be used to highlight a few actions that are out of the
        view to be displayed inside the view. For example, if
        there's a very long form with Save and Cancel buttons at the
        bottom, we can use the bottom bar to show those two buttons
        in the view. We are making these bars to be flexible in
        height and also allowing any component to be
          </div>
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      style={
        Object {
          "padding": "8px",
        }
      }
    >
      <div
        className="accordionContainer"
      >
        <div
          aria-controls="2-content"
          aria-expanded={false}
          className="accordionSummary"
          id="2-header"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="button"
          tabIndex={0}
        >
          <div
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
              }
            }
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M12 20C7.59 20 4 16.41 4 12S7.59 4 12 4 20 7.59 20 12 16.41 20 12 20M16.59 7.58L10 14.17L7.41 11.59L6 13L10 17L18 9L16.59 7.58Z"
                  style={
                    Object {
                      "fill": "green",
                    }
                  }
                />
              </svg>
            </span>
            <div
              style={
                Object {
                  "margin": "0 12px 0 5px",
                }
              }
            >
              Notification testing
            </div>
            <span
              className="badge header6 active"
            >
              12
            </span>
          </div>
          <span
            aria-hidden={false}
            className="accordionIcon iconWrapper"
            role="presentation"
          >
            <svg
              role="presentation"
              style={
                Object {
                  "height": "20px",
                  "width": "20px",
                }
              }
              viewBox="0 0 24 24"
            >
              <path
                d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                style={
                  Object {
                    "fill": "currentColor",
                  }
                }
              />
            </svg>
          </span>
        </div>
        <div
          aria-labelledby="2-header"
          className="accordionBodyContainer"
          id="2-content"
          role="region"
        >
          <div
            className="accordionBody showBorderTop"
          >
            Body 2 text used here. Bottom bars are sticky sections that
        can be used to highlight a few actions that are out of the
        view to be displayed inside the view. For example, if
        there's a very long form with Save and Cancel buttons at the
        bottom, we can use the bottom bar to show those two buttons
        in the view. We are making these bars to be flexible in
        height and also allowing any component to be
          </div>
        </div>
      </div>
    </li>
  </ul>
  <div
    style={
      Object {
        "paddingLeft": "16px",
      }
    }
  >
    <h3>
      Footer
    </h3>
  </div>
</div>
`;

exports[`Storyshots Accordion List Vertical 1`] = `
<div
  className="my-list-class"
  style={Object {}}
>
  <div
    style={
      Object {
        "paddingLeft": "16px",
      }
    }
  >
    <h2>
      Header
    </h2>
  </div>
  <ul
    className="listContainer vertical"
  >
    <li
      className="listItem my-list-item-class"
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div
        className="accordionContainer"
      >
        <div
          aria-controls="1-content"
          aria-expanded={false}
          className="accordionSummary"
          id="1-header"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="button"
          tabIndex={0}
        >
          <div
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
              }
            }
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M12 20C7.59 20 4 16.41 4 12S7.59 4 12 4 20 7.59 20 12 16.41 20 12 20M16.59 7.58L10 14.17L7.41 11.59L6 13L10 17L18 9L16.59 7.58Z"
                  style={
                    Object {
                      "fill": "green",
                    }
                  }
                />
              </svg>
            </span>
            <div
              style={
                Object {
                  "margin": "0 12px 0 5px",
                }
              }
            >
              Notification testing
            </div>
            <span
              className="badge header6 active"
            >
              2
            </span>
          </div>
          <span
            aria-hidden={false}
            className="accordionIcon iconWrapper"
            role="presentation"
          >
            <svg
              role="presentation"
              style={
                Object {
                  "height": "20px",
                  "width": "20px",
                }
              }
              viewBox="0 0 24 24"
            >
              <path
                d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                style={
                  Object {
                    "fill": "currentColor",
                  }
                }
              />
            </svg>
          </span>
        </div>
        <div
          aria-labelledby="1-header"
          className="accordionBodyContainer"
          id="1-content"
          role="region"
        >
          <div
            className="accordionBody showBorderTop"
          >
            Body 2 text used here. Bottom bars are sticky sections that
        can be used to highlight a few actions that are out of the
        view to be displayed inside the view. For example, if
        there's a very long form with Save and Cancel buttons at the
        bottom, we can use the bottom bar to show those two buttons
        in the view. We are making these bars to be flexible in
        height and also allowing any component to be
          </div>
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div
        className="accordionContainer"
      >
        <div
          aria-controls="2-content"
          aria-expanded={false}
          className="accordionSummary"
          id="2-header"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="button"
          tabIndex={0}
        >
          <div
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
              }
            }
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M12 20C7.59 20 4 16.41 4 12S7.59 4 12 4 20 7.59 20 12 16.41 20 12 20M16.59 7.58L10 14.17L7.41 11.59L6 13L10 17L18 9L16.59 7.58Z"
                  style={
                    Object {
                      "fill": "green",
                    }
                  }
                />
              </svg>
            </span>
            <div
              style={
                Object {
                  "margin": "0 12px 0 5px",
                }
              }
            >
              Notification testing
            </div>
            <span
              className="badge header6 active"
            >
              12
            </span>
          </div>
          <span
            aria-hidden={false}
            className="accordionIcon iconWrapper"
            role="presentation"
          >
            <svg
              role="presentation"
              style={
                Object {
                  "height": "20px",
                  "width": "20px",
                }
              }
              viewBox="0 0 24 24"
            >
              <path
                d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                style={
                  Object {
                    "fill": "currentColor",
                  }
                }
              />
            </svg>
          </span>
        </div>
        <div
          aria-labelledby="2-header"
          className="accordionBodyContainer"
          id="2-content"
          role="region"
        >
          <div
            className="accordionBody showBorderTop"
          >
            Body 2 text used here. Bottom bars are sticky sections that
        can be used to highlight a few actions that are out of the
        view to be displayed inside the view. For example, if
        there's a very long form with Save and Cancel buttons at the
        bottom, we can use the bottom bar to show those two buttons
        in the view. We are making these bars to be flexible in
        height and also allowing any component to be
          </div>
        </div>
      </div>
    </li>
  </ul>
  <div
    style={
      Object {
        "paddingLeft": "16px",
      }
    }
  >
    <h3>
      Footer
    </h3>
  </div>
</div>
`;

exports[`Storyshots Accordion Single 1`] = `
<div
  className="accordionContainer"
>
  <div
    aria-controls="myAccordionId-content"
    aria-expanded={false}
    className="accordionSummary"
    id="myAccordionId-header"
    onClick={[Function]}
    onKeyDown={[Function]}
    role="button"
    tabIndex={0}
  >
    Accordion Header
    <span
      aria-hidden={false}
      className="accordionIcon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </div>
  <div
    aria-labelledby="myAccordionId-header"
    className="accordionBodyContainer"
    id="myAccordionId-content"
    role="region"
  >
    <div
      className="accordionBody showBorderTop"
    >
      <div
        style={
          Object {
            "height": "80px",
          }
        }
      >
        Body 2 text used here. Bottom bars are sticky sections that can be used to highlight a few actions that are out of the view to be displayed inside the view. For example, if there's a very long form with Save and Cancel buttons at the bottom, we can use the bottom bar to show those two buttons in the view. We are making these bars to be flexible in height and also allowing any component to be added inside for now, to understand use cases from the team.
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Avatar Avatar Default 1`] = `
<div
  className="my-avatar-class"
  style={
    Object {
      "fontSize": "18px",
      "height": "40px",
      "minHeight": "40px",
      "minWidth": "40px",
      "width": "40px",
    }
  }
>
  <img
    alt="random profile image"
    className="imageStyle"
    height="40px"
    src="https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg"
    width="40px"
  />
</div>
`;

exports[`Storyshots Avatar Avatar Fallback 1`] = `
<div
  className="wrapperStyle my-avatar-class imageStyle roundImage green"
  style={
    Object {
      "fontSize": "18px",
      "height": "40px",
      "minHeight": "40px",
      "minWidth": "40px",
      "width": "40px",
    }
  }
>
  AB
</div>
`;

exports[`Storyshots Avatar Avatar Icon 1`] = `
<div
  className="wrapperStyle my-avatar-class imageStyle"
  style={
    Object {
      "backgroundColor": "grey",
      "fontSize": "18px",
      "height": "40px",
      "minHeight": "40px",
      "minWidth": "40px",
      "width": "40px",
    }
  }
>
  <span
    aria-hidden={false}
    className="iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "18px",
          "width": "18px",
        }
      }
      viewBox="0 0 24 24"
    >
      <path
        d="M21,19V20H3V19L5,17V11C5,7.9 7.03,5.17 10,4.29C10,4.19 10,4.1 10,4A2,2 0 0,1 12,2A2,2 0 0,1 14,4C14,4.1 14,4.19 14,4.29C16.97,5.17 19,7.9 19,11V17L21,19M14,21A2,2 0 0,1 12,23A2,2 0 0,1 10,21"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
    </svg>
  </span>
</div>
`;

exports[`Storyshots Avatar Avatar Round 1`] = `
<div
  className="my-avatar-class"
  style={
    Object {
      "fontSize": "18px",
      "height": "40px",
      "minHeight": "40px",
      "minWidth": "40px",
      "width": "40px",
    }
  }
>
  <img
    alt="random profile image"
    className="imageStyle roundImage"
    height="40px"
    src="https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg"
    width="40px"
  />
</div>
`;

exports[`Storyshots Avatar Avatar Round Icon 1`] = `
<div
  className="wrapperStyle my-avatar-class imageStyle roundImage"
  style={
    Object {
      "backgroundColor": "grey",
      "fontSize": "18px",
      "height": "40px",
      "minHeight": "40px",
      "minWidth": "40px",
      "width": "40px",
    }
  }
>
  <span
    aria-hidden={false}
    className="iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "18px",
          "width": "18px",
        }
      }
      viewBox="0 0 24 24"
    >
      <path
        d="M21,19V20H3V19L5,17V11C5,7.9 7.03,5.17 10,4.29C10,4.19 10,4.1 10,4A2,2 0 0,1 12,2A2,2 0 0,1 14,4C14,4.1 14,4.19 14,4.29C16.97,5.17 19,7.9 19,11V17L21,19M14,21A2,2 0 0,1 12,23A2,2 0 0,1 10,21"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
    </svg>
  </span>
</div>
`;

exports[`Storyshots Badge Badge Active 1`] = `
<span
  className="badge header6 my-badge-class active"
  style={Object {}}
>
  8
</span>
`;

exports[`Storyshots Badge Badge Default 1`] = `
<span
  className="badge header6 my-badge-class"
  style={Object {}}
>
  8
</span>
`;

exports[`Storyshots Badge Badge Disruptive 1`] = `
<span
  className="badge header6 disruptive my-badge-class active"
  style={Object {}}
>
  8
</span>
`;

exports[`Storyshots Button Default 1`] = `
<button
  aria-disabled={false}
  aria-label="Default Button"
  className="my-btn-class button buttonDefault iconLeft"
  data-test-id="my-btn-test-id"
  defaultChecked={false}
  disabled={false}
  id="myButton"
  style={Object {}}
  type="button"
>
  <span>
    <span
      aria-hidden={true}
      className="icon iconWrapper"
      data-test-id="myButtonIconTestId"
      id="myButtonIcon"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className=""
    >
      Default Button
    </span>
  </span>
</button>
`;

exports[`Storyshots Button Neutral 1`] = `
<button
  aria-disabled={false}
  aria-label="Neutral Button"
  className="my-btn-class button buttonNeutral iconLeft"
  data-test-id="my-btn-test-id"
  defaultChecked={false}
  disabled={false}
  id="myButton"
  style={Object {}}
  type="button"
>
  <span>
    <span
      aria-hidden={true}
      className="icon iconWrapper"
      data-test-id="myButtonIconTestId"
      id="myButtonIcon"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className=""
    >
      Neutral Button
    </span>
  </span>
</button>
`;

exports[`Storyshots Button Primary 1`] = `
<button
  aria-disabled={false}
  aria-label="Primary Button"
  className="my-btn-class button buttonPrimary iconLeft"
  data-test-id="my-btn-test-id"
  defaultChecked={false}
  disabled={false}
  id="myButton"
  style={Object {}}
  type="button"
>
  <span>
    <span
      aria-hidden={true}
      className="icon iconWrapper"
      data-test-id="myButtonIconTestId"
      id="myButtonIcon"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className=""
    >
      Primary Button
    </span>
  </span>
</button>
`;

exports[`Storyshots Button Secondary 1`] = `
<button
  aria-disabled={false}
  aria-label="Secondary Button"
  className="my-btn-class button buttonSecondary iconLeft"
  data-test-id="my-btn-test-id"
  defaultChecked={false}
  disabled={false}
  id="myButton"
  style={Object {}}
  type="button"
>
  <span>
    <span
      aria-hidden={true}
      className="icon iconWrapper"
      data-test-id="myButtonIconTestId"
      id="myButtonIcon"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className=""
    >
      Secondary Button
    </span>
  </span>
</button>
`;

exports[`Storyshots Button Split 1`] = `
Array [
  <button
    aria-disabled={false}
    aria-label="Split Button"
    className="my-btn-class button buttonPrimary splitLeft"
    data-test-id="my-btn-test-id"
    defaultChecked={false}
    disabled={false}
    id="myButton"
    style={Object {}}
    type="button"
  >
    <span
      className=""
    >
      Split Button
    </span>
  </button>,
  <button
    aria-checked={false}
    aria-disabled={false}
    aria-pressed={false}
    className="my-btn-class button buttonPrimary undefined splitButton splitRight"
    defaultChecked={false}
    disabled={false}
    type="button"
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      aria-hidden="true"
      className="splitDivider splitDividerPrimary"
    />
  </button>,
]
`;

exports[`Storyshots Button Toggle 1`] = `
<button
  aria-checked={false}
  aria-disabled={false}
  aria-label="Toggle Button"
  aria-pressed={false}
  className="my-btn-class button buttonPrimary iconRight"
  data-test-id="my-btn-test-id"
  defaultChecked={false}
  disabled={false}
  id="myButton"
  style={Object {}}
  type="button"
>
  <span>
    <span
      aria-hidden={true}
      className="icon iconWrapper"
      data-test-id="myButtonIconTestId"
      id="myButtonIcon"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className=""
    >
      Toggle Button
    </span>
  </span>
</button>
`;

exports[`Storyshots Button Two State Button 1`] = `
<button
  aria-checked={false}
  aria-disabled={false}
  aria-label="Two State Button"
  aria-pressed={false}
  className="my-two-state-btn-class button twoStateButton"
  defaultChecked={false}
  disabled={false}
  id="myTwoStateButton"
  style={Object {}}
  type="button"
>
  <span
    className="twoStateButtonContent"
  >
    <span
      className="column columnOne"
    >
      <span
        aria-hidden={true}
        className="icon iconWrapper"
        data-test-id="myTwoStateButtonIconOneTestId"
        id="myTwoStateButtonIconOne"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className=""
      >
        Two State Button
      </span>
      <span
        className="badge header6 counter"
      >
        8
      </span>
    </span>
    <span
      className="column"
    >
      <span
        aria-hidden={true}
        className="icon iconWrapper"
        data-test-id="myTwoStateButtonIconTwoTestId"
        id="myTwoStateButtonIconTwo"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </span>
  </span>
</button>
`;

exports[`Storyshots Check Box Check Box 1`] = `
<div
  className="selector"
  onKeyDown={[Function]}
>
  <input
    aria-label="Label"
    checked={true}
    defaultChecked={false}
    disabled={false}
    id="myCheckBoxId"
    name="myCheckBoxName"
    onChange={[Function]}
    readOnly={true}
    tabIndex={-1}
    type="checkbox"
    value="Label"
  />
  <label
    className=""
    htmlFor="myCheckBoxId"
  >
    <span
      className="checkmark"
      tabIndex={0}
    />
    <span
      className="selectorLabel"
    >
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots Check Box Check Box Group 1`] = `
Array [
  <div
    className="selector"
    onKeyDown={[Function]}
  >
    <input
      checked={true}
      disabled={false}
      id="test-1"
      name="group"
      onChange={[Function]}
      readOnly={true}
      tabIndex={-1}
      type="checkbox"
      value="First"
    />
    <label
      className=""
      htmlFor="test-1"
    >
      <span
        className="checkmark"
        tabIndex={0}
      />
      <span
        className="selectorLabel"
      >
        First
      </span>
    </label>
  </div>,
  <div
    className="selector"
    onKeyDown={[Function]}
  >
    <input
      checked={true}
      disabled={false}
      id="test-2"
      name="group"
      onChange={[Function]}
      readOnly={true}
      tabIndex={-1}
      type="checkbox"
      value="Second"
    />
    <label
      className=""
      htmlFor="test-2"
    >
      <span
        className="checkmark"
        tabIndex={0}
      />
      <span
        className="selectorLabel"
      >
        Second
      </span>
    </label>
  </div>,
  <div
    className="selector"
    onKeyDown={[Function]}
  >
    <input
      checked={true}
      disabled={false}
      id="test-3"
      name="group"
      onChange={[Function]}
      readOnly={true}
      tabIndex={-1}
      type="checkbox"
      value="Third"
    />
    <label
      className=""
      htmlFor="test-3"
    >
      <span
        className="checkmark"
        tabIndex={0}
      />
      <span
        className="selectorLabel"
      >
        Third
      </span>
    </label>
  </div>,
]
`;

exports[`Storyshots Config Provider Theming 1`] = `
<div
  className="stack vertical xxl"
  style={
    Object {
      "alignItems": undefined,
      "flexWrap": undefined,
      "justifyContent": undefined,
    }
  }
>
  <h1
    style={
      Object {
        "marginBottom": 0,
      }
    }
  >
    Selected Theme:
    <span
      style={
        Object {
          "color": "var(--primary-color)",
          "marginLeft": "4px",
          "textTransform": "capitalize",
        }
      }
    >
      blue
    </span>
  </h1>
  <div
    className="stack horizontal m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
        "marginTop": 0,
      }
    }
  >
    <div>
      <p>
        Predefined
      </p>
      <select
        onChange={[Function]}
        style={
          Object {
            "fontSize": "1rem",
          }
        }
        value="blue"
      >
        <option
          value="red"
        >
          red
        </option>
        <option
          value="orange"
        >
          orange
        </option>
        <option
          value="yellow"
        >
          yellow
        </option>
        <option
          value="green"
        >
          green
        </option>
        <option
          value="bluegreen"
        >
          bluegreen
        </option>
        <option
          value="blue"
        >
          blue
        </option>
        <option
          value="violet"
        >
          violet
        </option>
        <option
          value="grey"
        >
          grey
        </option>
      </select>
    </div>
    <div>
      <p>
        Custom
      </p>
      <div
        style={
          Object {
            "display": "inline-block",
            "position": "relative",
          }
        }
      >
        <div
          style={
            Object {
              "MozBorderRadius": 2,
              "MozBoxShadow": "0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)",
              "OBorderRadius": 2,
              "OBoxShadow": "0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)",
              "WebkitBorderRadius": 2,
              "WebkitBoxShadow": "0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)",
              "background": "#fff",
              "borderRadius": 2,
              "bottom": "0px",
              "boxShadow": "0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)",
              "left": "0px",
              "msBorderRadius": 2,
              "msBoxShadow": "0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)",
              "position": "absolute",
              "right": "0px",
              "top": "0px",
            }
          }
        />
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="compact-picker "
            style={
              Object {
                "boxSizing": "initial",
                "paddingLeft": "5px",
                "paddingTop": "5px",
                "width": "240px",
              }
            }
          >
            <div>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#4D4D4D",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#4D4D4D"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#999999",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#999999"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "MozBoxShadow": "inset 0 0 0 1px #ddd",
                      "OBoxShadow": "inset 0 0 0 1px #ddd",
                      "WebkitBoxShadow": "inset 0 0 0 1px #ddd",
                      "background": "#FFFFFF",
                      "boxShadow": "inset 0 0 0 1px #ddd",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "msBoxShadow": "inset 0 0 0 1px #ddd",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#FFFFFF"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#F44E3B",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#F44E3B"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#FE9200",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#FE9200"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#FCDC00",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#FCDC00"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#DBDF00",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#DBDF00"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#A4DD00",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#A4DD00"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#68CCCA",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#68CCCA"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#73D8FF",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#73D8FF"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#AEA1FF",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#AEA1FF"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#FDA1FF",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#FDA1FF"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#333333",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#333333"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#808080",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#808080"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#cccccc",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#cccccc"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#D33115",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#D33115"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#E27300",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#E27300"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#FCC400",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#FCC400"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#B0BC00",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#B0BC00"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#68BC00",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#68BC00"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#16A5A5",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#16A5A5"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#009CE0",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#009CE0"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#7B64FF",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#7B64FF"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#FA28FF",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#FA28FF"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#000000",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#000000"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "1",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#666666",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#666666"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#B3B3B3",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#B3B3B3"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#9F0500",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#9F0500"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#C45100",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#C45100"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#FB9E00",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#FB9E00"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#000",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#808900",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#808900"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#194D33",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#194D33"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#0C797D",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#0C797D"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#0062B1",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#0062B1"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#653294",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#653294"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <span
                onBlur={[Function]}
                onFocus={[Function]}
              >
                <div
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  style={
                    Object {
                      "background": "#AB149E",
                      "cursor": "pointer",
                      "float": "left",
                      "height": "15px",
                      "marginBottom": "5px",
                      "marginRight": "5px",
                      "outline": "none",
                      "position": "relative",
                      "width": "15px",
                    }
                  }
                  tabIndex={0}
                  title="#AB149E"
                >
                  <div
                    style={
                      Object {
                        "MozBorderRadius": "50%",
                        "OBorderRadius": "50%",
                        "WebkitBorderRadius": "50%",
                        "background": "#fff",
                        "borderRadius": "50%",
                        "bottom": "5px",
                        "left": "5px",
                        "msBorderRadius": "50%",
                        "opacity": "0",
                        "position": "absolute",
                        "right": "5px",
                        "top": "5px",
                      }
                    }
                  />
                </div>
              </span>
              <div
                style={
                  Object {
                    "clear": "both",
                  }
                }
              />
            </div>
            <div
              className="flexbox-fix"
              style={
                Object {
                  "display": "flex",
                  "paddingBottom": "6px",
                  "paddingRight": "5px",
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "background": "#000000",
                    "height": "9px",
                    "left": "5px",
                    "position": "absolute",
                    "top": "6px",
                    "width": "9px",
                  }
                }
              />
              <div
                style={
                  Object {
                    "MozBoxFlex": "6",
                    "WebkitBoxFlex": "6",
                    "WebkitFlex": "6",
                    "flex": "6",
                    "msFlex": "6",
                    "position": "relative",
                  }
                }
              >
                <input
                  id="rc-editable-input-1"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  spellCheck="false"
                  style={
                    Object {
                      "background": "none",
                      "border": "none",
                      "color": "#333",
                      "fontSize": "12px",
                      "height": "16px",
                      "outline": "none",
                      "padding": "0px",
                      "paddingLeft": "20%",
                      "width": "80%",
                    }
                  }
                  value="#000000"
                />
                <label
                  htmlFor="rc-editable-input-1"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                >
                  hex
                </label>
              </div>
              <div
                style={
                  Object {
                    "MozBoxFlex": "3",
                    "WebkitBoxFlex": "3",
                    "WebkitFlex": "3",
                    "flex": "3",
                    "msFlex": "3",
                    "position": "relative",
                  }
                }
              >
                <input
                  id="rc-editable-input-2"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  spellCheck="false"
                  style={
                    Object {
                      "background": "none",
                      "border": "none",
                      "color": "#333",
                      "fontSize": "12px",
                      "height": "16px",
                      "outline": "none",
                      "padding": "0px",
                      "paddingLeft": "30%",
                      "width": "70%",
                    }
                  }
                  value="0"
                />
                <label
                  htmlFor="rc-editable-input-2"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "color": "#999",
                      "fontSize": "12px",
                      "left": "0px",
                      "lineHeight": "16px",
                      "position": "absolute",
                      "textTransform": "uppercase",
                      "top": "3px",
                    }
                  }
                >
                  r
                </label>
              </div>
              <div
                style={
                  Object {
                    "MozBoxFlex": "3",
                    "WebkitBoxFlex": "3",
                    "WebkitFlex": "3",
                    "flex": "3",
                    "msFlex": "3",
                    "position": "relative",
                  }
                }
              >
                <input
                  id="rc-editable-input-3"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  spellCheck="false"
                  style={
                    Object {
                      "background": "none",
                      "border": "none",
                      "color": "#333",
                      "fontSize": "12px",
                      "height": "16px",
                      "outline": "none",
                      "padding": "0px",
                      "paddingLeft": "30%",
                      "width": "70%",
                    }
                  }
                  value="0"
                />
                <label
                  htmlFor="rc-editable-input-3"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "color": "#999",
                      "fontSize": "12px",
                      "left": "0px",
                      "lineHeight": "16px",
                      "position": "absolute",
                      "textTransform": "uppercase",
                      "top": "3px",
                    }
                  }
                >
                  g
                </label>
              </div>
              <div
                style={
                  Object {
                    "MozBoxFlex": "3",
                    "WebkitBoxFlex": "3",
                    "WebkitFlex": "3",
                    "flex": "3",
                    "msFlex": "3",
                    "position": "relative",
                  }
                }
              >
                <input
                  id="rc-editable-input-4"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  spellCheck="false"
                  style={
                    Object {
                      "background": "none",
                      "border": "none",
                      "color": "#333",
                      "fontSize": "12px",
                      "height": "16px",
                      "outline": "none",
                      "padding": "0px",
                      "paddingLeft": "30%",
                      "width": "70%",
                    }
                  }
                  value="0"
                />
                <label
                  htmlFor="rc-editable-input-4"
                  onMouseDown={[Function]}
                  style={
                    Object {
                      "color": "#999",
                      "fontSize": "12px",
                      "left": "0px",
                      "lineHeight": "16px",
                      "position": "absolute",
                      "textTransform": "uppercase",
                      "top": "3px",
                    }
                  }
                >
                  b
                </label>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="stack horizontal m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
      }
    }
  >
    <button
      aria-disabled={false}
      aria-label="Primary Button"
      className="button buttonPrimary buttonSize3"
      defaultChecked={false}
      disabled={false}
    >
      <span
        className="buttonText3"
      >
        Primary Button
      </span>
    </button>
    <button
      aria-disabled={false}
      aria-label="Primary Button"
      className="button buttonPrimary buttonSize3 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "16px",
              "width": "16px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
    <button
      aria-disabled={false}
      aria-label="Primary Button"
      className="button buttonPrimary buttonSize3 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "16px",
                "width": "16px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText3"
        >
          Primary Button
        </span>
      </span>
    </button>
  </div>
  <div
    className="stack horizontal m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
      }
    }
  >
    <button
      aria-disabled={false}
      aria-label="Secondary Button"
      className="button buttonSecondary buttonSize3"
      defaultChecked={false}
      disabled={false}
    >
      <span
        className="buttonText3"
      >
        Secondary Button
      </span>
    </button>
    <button
      aria-disabled={false}
      aria-label="Secondary Button"
      className="button buttonSecondary buttonSize3 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "16px",
              "width": "16px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
    <button
      aria-disabled={false}
      aria-label="Secondary Button"
      className="button buttonSecondary buttonSize3 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "16px",
                "width": "16px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText3"
        >
          Secondary Button
        </span>
      </span>
    </button>
  </div>
  <div
    className="stack horizontal m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
      }
    }
  >
    <button
      aria-disabled={false}
      aria-label="Default Button"
      className="button buttonDefault buttonSize3"
      defaultChecked={false}
      disabled={false}
    >
      <span
        className="buttonText3"
      >
        Default Button
      </span>
    </button>
    <button
      aria-disabled={false}
      aria-label="Default Button"
      className="button buttonDefault buttonSize3 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "16px",
              "width": "16px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
    <button
      aria-disabled={false}
      aria-label="Default Button"
      className="button buttonDefault buttonSize3 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "16px",
                "width": "16px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText3"
        >
          Default Button
        </span>
      </span>
    </button>
  </div>
  <div>
    <div
      className="tabWrap"
      role="tablist"
      value="tab1"
    >
      <button
        aria-label="Tab 1"
        aria-selected={true}
        className="tab active"
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 1
        </span>
        <div
          className="tabIndicator"
          data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
          data-flip-id="tabIndicator"
          data-portal-key="portal"
        />
      </button>
      <button
        aria-label="Tab 2"
        aria-selected={false}
        className="tab"
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 2
        </span>
      </button>
      <button
        aria-label="Tab 3"
        aria-selected={false}
        className="tab"
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 3
        </span>
      </button>
      <button
        aria-label="Tab 4"
        aria-selected={false}
        className="tab"
        disabled={true}
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 4
        </span>
      </button>
    </div>
  </div>
  <div>
    <div
      className="tabWrap"
      role="tablist"
      value="tab1"
    >
      <button
        aria-label="Tab 1"
        aria-selected={true}
        className="tab active"
        onClick={[Function]}
        role="tab"
      >
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <div
          className="tabIndicator"
          data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
          data-flip-id="tabIndicator"
          data-portal-key="portal"
        />
      </button>
      <button
        aria-label="Tab 2"
        aria-selected={false}
        className="tab"
        onClick={[Function]}
        role="tab"
      >
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
      </button>
      <button
        aria-label="Tab 3"
        aria-selected={false}
        className="tab"
        onClick={[Function]}
        role="tab"
      >
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
      </button>
      <button
        aria-label="Tab 4"
        aria-selected={false}
        className="tab"
        disabled={true}
        onClick={[Function]}
        role="tab"
      >
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
      </button>
    </div>
  </div>
  <div>
    <div
      className="tabWrap small"
      role="tablist"
      value="tab1"
    >
      <button
        aria-label="Tab 1"
        aria-selected={true}
        className="tab active"
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 1
        </span>
        <div
          className="tabIndicator"
          data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
          data-flip-id="tabIndicator"
          data-portal-key="portal"
        />
      </button>
      <button
        aria-label="Tab 2"
        aria-selected={false}
        className="tab"
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 2
        </span>
      </button>
      <button
        aria-label="Tab 3"
        aria-selected={false}
        className="tab"
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 3
        </span>
      </button>
      <button
        aria-label="Tab 4"
        aria-selected={false}
        className="tab"
        disabled={true}
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 4
        </span>
      </button>
    </div>
  </div>
  <div>
    <div
      className="tabWrap pill"
      role="tablist"
      value="tab1"
    >
      <button
        aria-label="Tab 1"
        aria-selected={true}
        className="tab active"
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 1
        </span>
        <div
          className="tabIndicator"
          data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
          data-flip-id="tabIndicator"
          data-portal-key="portal"
        />
      </button>
      <button
        aria-label="Tab 2"
        aria-selected={false}
        className="tab"
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 2
        </span>
      </button>
      <button
        aria-label="Tab 3"
        aria-selected={false}
        className="tab"
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 3
        </span>
      </button>
      <button
        aria-label="Tab 4"
        aria-selected={false}
        className="tab"
        disabled={true}
        onClick={[Function]}
        role="tab"
      >
        <span
          className="label"
        >
          Tab 4
        </span>
      </button>
    </div>
  </div>
  <div
    aria-label="score"
    className="matchScoreContainer"
  >
    <div
      className="matchScoreCircle full"
    />
    <div
      className="matchScoreCircle full"
    />
    <div
      className="matchScoreCircle full"
    />
    <div
      className="matchScoreCircle"
    />
    <div
      className="matchScoreCircle"
    />
    <p
      className="label"
    >
      3
      /
      5
    </p>
  </div>
  <span
    aria-hidden={false}
    className="spinner iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "48px",
          "width": "48px",
        }
      }
      viewBox="0 0 24 24"
    >
      <style>
        @keyframes spin { to { transform: rotate(360deg) } }
      </style>
      <g
        style={
          Object {
            "animation": "spin linear 0.8s infinite",
            "transformOrigin": "center",
          }
        }
      >
        <path
          d="M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
        <rect
          fill="transparent"
          height="24"
          width="24"
        />
      </g>
    </svg>
  </span>
</div>
`;

exports[`Storyshots Dialog Medium 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open dialog
  </span>
</button>
`;

exports[`Storyshots Dialog Small 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary buttonPrimaryDisruptive"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open dialog
  </span>
</button>
`;

exports[`Storyshots Dropdown Dropdown Button 1`] = `
<div
  className="my-dropdown-class mainWrapper"
  style={Object {}}
>
  <button
    aria-controls="dropdown-3"
    aria-disabled={false}
    aria-expanded={false}
    aria-haspopup={true}
    className="button buttonDefault iconRight"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
    role="button"
    tabIndex="0"
  >
    <span>
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className=""
      >
        Click button start
      </span>
    </span>
  </button>
</div>
`;

exports[`Storyshots Dropdown Dropdown Div 1`] = `
<div
  className="my-dropdown-class mainWrapper"
  style={Object {}}
>
  <div
    aria-controls="dropdown-4"
    aria-expanded={false}
    aria-haspopup={true}
    className="referenceWrapper"
    onClick={[Function]}
    role="button"
    style={
      Object {
        "display": "flex",
      }
    }
    tabIndex="0"
  >
    <code>
      HTMLDivElement
    </code>
    <span
      aria-hidden={false}
      className="iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </div>
</div>
`;

exports[`Storyshots Icon Basic 1`] = `
<span
  aria-hidden={false}
  className="my-icon-class iconWrapper"
  data-test-id="myIconTestId"
  id="myIconId"
  role="presentation"
>
  <svg
    aria-labelledby="icon_labelledby_33 icon_describedby_33"
    style={
      Object {
        "height": "20px",
        "width": "20px",
      }
    }
    viewBox="0 0 24 24"
  >
    <title
      id="icon_labelledby_33"
    >
      My icon title.
    </title>
    <desc
      id="icon_describedby_33"
    >
      My icon description.
    </desc>
    <path
      d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
      style={
        Object {
          "fill": "#000000",
        }
      }
    />
  </svg>
</span>
`;

exports[`Storyshots Icon Icomoon 1`] = `
<span
  aria-hidden={false}
  className="my-icon-class iconWrapper"
  data-test-id="myIconTestId"
  id="myIconId"
  role="presentation"
>
  <svg
    className=""
    height="20px"
    role="presentation"
    style={
      Object {
        "display": "inline-block",
        "verticalAlign": "middle",
      }
    }
    viewBox="0 0 1024 1024"
    width="20px"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M864 0c88.364 0 160 71.634 160 160 0 36.020-11.91 69.258-32 96l-64 64-224-224 64-64c26.742-20.090 59.978-32 96-32zM64 736l-64 288 288-64 592-592-224-224-592 592zM715.578 363.578l-448 448-55.156-55.156 448-448 55.156 55.156z"
      style={
        Object {
          "fill": "#000000",
        }
      }
    />
  </svg>
</span>
`;

exports[`Storyshots Icon Icomoon Multicolor 1`] = `
<span
  aria-hidden={false}
  className="my-icon-class iconWrapper"
  data-test-id="myIconTestId"
  id="myIconId"
  role="presentation"
>
  <svg
    className=""
    height="24px"
    role="presentation"
    style={
      Object {
        "display": "inline-block",
        "verticalAlign": "middle",
      }
    }
    viewBox="0 0 1024 1024"
    width="24px"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M102.4 153.6v716.8h241.912v-139.999h79.375v139.999h241.912v-716.8h-563.2zM181.777 233.867h81.268v78.399h-81.268v-78.399zM344.312 233.867h79.375v78.399h-79.375v-78.399zM504.955 233.867h81.267v78.399h-81.267v-78.399zM181.777 392.532h81.268v80.269h-81.268v-80.269zM344.312 392.532h79.375v80.269h-79.375v-80.269zM504.955 392.532h81.267v80.269h-81.267v-80.269zM181.777 551.201h81.268v80.266h-81.268v-80.266zM344.312 551.201h79.375v80.266h-79.375v-80.266zM504.955 551.201h81.267v80.266h-81.267v-80.266zM181.777 711.734h81.268v78.4h-81.268v-78.4zM504.955 711.734h81.267v78.4h-81.267v-78.4z"
      fill="rgb(80, 206, 225)"
      style={
        Object {
          "fill": undefined,
        }
      }
    />
    <path
      d="M598.536 358.4h108.529c14.303 0 26.501 5.478 36.598 16.435 10.936 10.112 16.404 22.333 16.404 36.662v54.359h108.531c14.303 0 26.501 5.478 36.598 16.435 10.936 10.115 16.404 22.756 16.404 37.926v295.821c0 15.171-5.468 28.234-16.404 39.191-10.097 10.115-22.295 15.171-36.598 15.171h-431.596c-14.303 0-26.921-5.056-37.86-15.171-10.094-10.957-15.142-24.020-15.142-39.191v-295.821c0-15.171 5.048-27.812 15.142-37.926 10.939-10.957 23.557-16.435 37.86-16.435h108.531v-54.359c0-14.328 5.046-26.55 15.142-36.662 10.936-10.957 23.557-16.435 37.86-16.435zM707.064 465.856v-54.359h-108.529v54.359h108.529z"
      fill="rgb(20, 109, 166)"
      opacity={0.6}
      style={
        Object {
          "fill": undefined,
        }
      }
    />
  </svg>
</span>
`;

exports[`Storyshots Info Bar Disruptive 1`] = `
<div
  className="infoBar my-info-bar-class disruptive"
  role="presentation"
  style={Object {}}
>
  <span
    aria-hidden={false}
    className="icon iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
      viewBox="0 0 24 24"
    >
      <path
        d="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
    </svg>
  </span>
  <div
    className="message body2"
  >
    Body2 is used inside here.
  </div>
  <button
    aria-disabled={false}
    aria-label="Action"
    className="my-action-btn-class button buttonNeutral"
    data-test-id="my-action-btn-test-id"
    defaultChecked={false}
    disabled={false}
    id="myActionButton"
  >
    <span
      className=""
    >
      Action
    </span>
  </button>
  <button
    aria-disabled={false}
    aria-label="Close"
    className="my-close-btn-class button buttonNeutral iconLeft"
    data-test-id="my-close-btn-test-id"
    defaultChecked={false}
    disabled={false}
    id="myCloseButton"
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Info Bar Neutral 1`] = `
<div
  className="infoBar my-info-bar-class neutral"
  role="presentation"
  style={Object {}}
>
  <span
    aria-hidden={false}
    className="icon iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
      viewBox="0 0 24 24"
    >
      <path
        d="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
    </svg>
  </span>
  <div
    className="message body2"
  >
    Body2 is used inside here.
  </div>
  <button
    aria-disabled={false}
    aria-label="Action"
    className="my-action-btn-class button buttonNeutral"
    data-test-id="my-action-btn-test-id"
    defaultChecked={false}
    disabled={false}
    id="myActionButton"
  >
    <span
      className=""
    >
      Action
    </span>
  </button>
  <button
    aria-disabled={false}
    aria-label="Close"
    className="my-close-btn-class button buttonNeutral iconLeft"
    data-test-id="my-close-btn-test-id"
    defaultChecked={false}
    disabled={false}
    id="myCloseButton"
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Info Bar Positive 1`] = `
<div
  className="infoBar my-info-bar-class positive"
  role="presentation"
  style={Object {}}
>
  <span
    aria-hidden={false}
    className="icon iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
      viewBox="0 0 24 24"
    >
      <path
        d="M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
    </svg>
  </span>
  <div
    className="message body2"
  >
    Body2 is used inside here.
  </div>
  <button
    aria-disabled={false}
    aria-label="Action"
    className="my-action-btn-class button buttonNeutral"
    data-test-id="my-action-btn-test-id"
    defaultChecked={false}
    disabled={false}
    id="myActionButton"
  >
    <span
      className=""
    >
      Action
    </span>
  </button>
  <button
    aria-disabled={false}
    aria-label="Close"
    className="my-close-btn-class button buttonNeutral iconLeft"
    data-test-id="my-close-btn-test-id"
    defaultChecked={false}
    disabled={false}
    id="myCloseButton"
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Info Bar Warning 1`] = `
<div
  className="infoBar my-info-bar-class warning"
  role="presentation"
  style={Object {}}
>
  <span
    aria-hidden={false}
    className="icon iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
      viewBox="0 0 24 24"
    >
      <path
        d="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
    </svg>
  </span>
  <div
    className="message body2"
  >
    Body2 is used inside here.
  </div>
  <button
    aria-disabled={false}
    aria-label="Action"
    className="my-action-btn-class button buttonNeutral"
    data-test-id="my-action-btn-test-id"
    defaultChecked={false}
    disabled={false}
    id="myActionButton"
  >
    <span
      className=""
    >
      Action
    </span>
  </button>
  <button
    aria-disabled={false}
    aria-label="Close"
    className="my-close-btn-class button buttonNeutral iconLeft"
    data-test-id="my-close-btn-test-id"
    defaultChecked={false}
    disabled={false}
    id="myCloseButton"
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Input Search Box 1`] = `
<form
  role="search"
>
  <div
    className="inputWrapper"
  >
    <div
      className="fieldLabel medium"
    >
      <label
        className="textStyle medium"
      >
        Label
      </label>
      <span
        className="fieldLabelIconButton medium"
      >
        <div
          className="referenceWrapper"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <button
            aria-disabled={false}
            className="labelIconButton button buttonDefault buttonSize3 iconLeft"
            defaultChecked={false}
            disabled={false}
          >
            <span
              aria-hidden={false}
              className="icon iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "16px",
                    "width": "16px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
                  style={
                    Object {
                      "fill": "currentColor",
                    }
                  }
                />
              </svg>
            </span>
          </button>
        </div>
        <div
          aria-hidden={true}
          className="tooltip top"
          role="tooltip"
          style={
            Object {
              "left": "",
              "position": "absolute",
              "top": "",
            }
          }
          tabIndex={0}
        >
          tooltip
          <div
            className="arrow"
            style={
              Object {
                "bottom": "-4px",
                "left": "",
                "position": "absolute",
                "top": "",
              }
            }
          />
        </div>
      </span>
    </div>
    <input
      aria-label="Search"
      autoFocus={false}
      className="my-searchbox-class withIcon withIconButton withIconAndIconButton"
      disabled={false}
      id="mySearchBoxId5"
      maxLength={100}
      minLength={0}
      name="mySearchBox"
      onChange={[Function]}
      placeholder="Search"
      readOnly={false}
      required={false}
      role="textbox"
      style={Object {}}
      tabIndex={0}
      type="search"
    />
    <div
      className="iconWrapper leftIcon"
    >
      <span
        aria-hidden={false}
        className="iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "red",
              }
            }
          />
        </svg>
      </span>
    </div>
    <button
      aria-disabled={false}
      className="iconButton leftIcon button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
</form>
`;

exports[`Storyshots Input Text Area 1`] = `
<div
  className="inputWrapper"
>
  <div
    className="fieldLabel medium"
  >
    <label
      className="textStyle medium"
    >
      Label
    </label>
    <span
      className="fieldLabelIconButton medium"
    >
      <div
        className="referenceWrapper"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <button
          aria-disabled={false}
          className="labelIconButton button buttonDefault buttonSize3 iconLeft"
          defaultChecked={false}
          disabled={false}
        >
          <span
            aria-hidden={false}
            className="icon iconWrapper"
            role="presentation"
          >
            <svg
              role="presentation"
              style={
                Object {
                  "height": "16px",
                  "width": "16px",
                }
              }
              viewBox="0 0 24 24"
            >
              <path
                d="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
                style={
                  Object {
                    "fill": "currentColor",
                  }
                }
              />
            </svg>
          </span>
        </button>
      </div>
      <div
        aria-hidden={true}
        className="tooltip top"
        role="tooltip"
        style={
          Object {
            "left": "",
            "position": "absolute",
            "top": "",
          }
        }
        tabIndex={0}
      >
        tooltip
        <div
          className="arrow"
          style={
            Object {
              "bottom": "-4px",
              "left": "",
              "position": "absolute",
              "top": "",
            }
          }
        />
      </div>
    </span>
  </div>
  <textarea
    aria-disabled={false}
    aria-label="Sample text"
    autoFocus={false}
    className="my-textarea-class textArea"
    cols={50}
    disabled={false}
    htmltype="text"
    id="myTextAreaId6"
    maxLength={300}
    minLength={0}
    name="myTextArea"
    onChange={[Function]}
    placeholder="Placeholder text"
    required={false}
    rows={5}
    style={Object {}}
    tabIndex={0}
  />
  <span
    aria-hidden={false}
    className="textAreaResizeIcon iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
      viewBox="0 0 24 24"
    >
      <path
        d="M22,22H20V20H22V22M22,18H20V16H22V18M18,22H16V20H18V22M18,18H16V16H18V18M14,22H12V20H14V22M22,14H20V12H22V14Z"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
    </svg>
  </span>
</div>
`;

exports[`Storyshots Input Text Input 1`] = `
<div
  className="inputWrapper"
>
  <div
    className="fieldLabel medium"
  >
    <label
      className="textStyle medium"
    >
      Label
    </label>
    <span
      className="fieldLabelIconButton medium"
    >
      <div
        className="referenceWrapper"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <button
          aria-disabled={false}
          className="labelIconButton button buttonDefault buttonSize3 iconLeft"
          defaultChecked={false}
          disabled={false}
        >
          <span
            aria-hidden={false}
            className="icon iconWrapper"
            role="presentation"
          >
            <svg
              role="presentation"
              style={
                Object {
                  "height": "16px",
                  "width": "16px",
                }
              }
              viewBox="0 0 24 24"
            >
              <path
                d="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
                style={
                  Object {
                    "fill": "currentColor",
                  }
                }
              />
            </svg>
          </span>
        </button>
      </div>
      <div
        aria-hidden={true}
        className="tooltip top"
        role="tooltip"
        style={
          Object {
            "left": "",
            "position": "absolute",
            "top": "",
          }
        }
        tabIndex={0}
      >
        tooltip
        <div
          className="arrow"
          style={
            Object {
              "bottom": "-4px",
              "left": "",
              "position": "absolute",
              "top": "",
            }
          }
        />
      </div>
    </span>
  </div>
  <input
    aria-label="Sample text"
    autoFocus={false}
    className="my-textinput-class withIcon withIconButton withIconAndIconButton"
    disabled={false}
    htmltype="text"
    id="myTextInputId7"
    maxLength={100}
    minLength={0}
    name="myTextInput"
    onChange={[Function]}
    placeholder="Placeholder text"
    readOnly={false}
    required={false}
    role="textbox"
    style={Object {}}
    tabIndex={0}
    type="text"
  />
  <div
    className="iconWrapper leftIcon"
  >
    <span
      aria-hidden={false}
      className="iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
          style={
            Object {
              "fill": "red",
            }
          }
        />
      </svg>
    </span>
  </div>
  <button
    aria-disabled={false}
    className="iconButton leftIcon button buttonDefault buttonSize2 iconLeft"
    defaultChecked={false}
    disabled={false}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Label Labels 1`] = `
<div
  className="fieldLabel medium my-label-class"
>
  <label
    className="textStyle medium"
    htmlFor=""
  >
    This is a label
  </label>
  <span
    className="fieldLabelIconButton medium"
  >
    <div
      className="referenceWrapper"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <button
        aria-disabled={false}
        className="labelIconButton button buttonDefault buttonSize3 iconLeft"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "16px",
                "width": "16px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      aria-hidden={true}
      className="tooltip right"
      role="tooltip"
      style={
        Object {
          "left": "",
          "position": "absolute",
          "top": "",
        }
      }
      tabIndex={0}
    >
      A tooltip
      <div
        className="arrow"
        style={
          Object {
            "left": "-4px",
            "position": "absolute",
            "top": "",
          }
        }
      />
    </div>
  </span>
</div>
`;

exports[`Storyshots Link Default 1`] = `
<a
  className="linkStyle my-link-class"
  href="https://www.twitter.com"
  style={Object {}}
  target="_self"
>
  Twitter
</a>
`;

exports[`Storyshots Link Default Disabled 1`] = `
<a
  className="linkStyle my-link-class"
  href="https://www.facebook.com"
  style={Object {}}
  target="_self"
>
  <span
    aria-hidden={false}
    className="iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
      viewBox="0 0 24 24"
    >
      <path
        d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
    </svg>
  </span>
  User Profile
</a>
`;

exports[`Storyshots Link Primary 1`] = `
<a
  className="linkStyle my-link-class primary"
  href="https://www.facebook.com"
  style={
    Object {
      "maxWidth": "100px",
    }
  }
  target="_self"
>
  <span
    aria-hidden={false}
    className="iconWrapper"
    role="presentation"
  >
    <svg
      role="presentation"
      style={
        Object {
          "height": "20px",
          "width": "20px",
        }
      }
      viewBox="0 0 24 24"
    >
      <path
        d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
    </svg>
  </span>
  User Profile
</a>
`;

exports[`Storyshots List Horizontal 1`] = `
<div
  className="my-list-class"
  style={Object {}}
>
  <div
    style={
      Object {
        "paddingLeft": "16px",
      }
    }
  >
    <h2>
      Header
    </h2>
  </div>
  <ul
    className="listContainer"
    role=""
  >
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 1
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 2
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 3
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 4
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 5
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
  </ul>
  <div
    style={
      Object {
        "paddingLeft": "16px",
      }
    }
  >
    <h3>
      Footer
    </h3>
  </div>
</div>
`;

exports[`Storyshots List Vertical 1`] = `
<div
  className="my-list-class"
  style={Object {}}
>
  <div
    style={
      Object {
        "paddingLeft": "16px",
      }
    }
  >
    <h2>
      Header
    </h2>
  </div>
  <ul
    className="listContainer vertical"
    role=""
  >
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 1
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 2
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 3
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 4
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
    <li
      className="listItem my-list-item-class"
      role=""
      style={
        Object {
          "padding": "8px 16px",
        }
      }
    >
      <div>
        <p>
          User 5
        </p>
        <div>
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        </div>
      </div>
    </li>
  </ul>
  <div
    style={
      Object {
        "paddingLeft": "16px",
      }
    }
  >
    <h3>
      Footer
    </h3>
  </div>
</div>
`;

exports[`Storyshots Match Score Default 1`] = `
<div
  aria-label="score"
  className="my-match-score-class matchScoreContainer"
>
  <div
    className="matchScoreCircle full"
  />
  <div
    className="matchScoreCircle full"
  />
  <div
    className="matchScoreCircle full"
  />
  <div
    className="matchScoreCircle"
  />
  <div
    className="matchScoreCircle"
  />
  <p
    className="label"
  >
    3
    /
    5
  </p>
</div>
`;

exports[`Storyshots Match Score Without Label 1`] = `
<div
  aria-label="score"
  className="my-match-score-class matchScoreContainer"
>
  <div
    className="matchScoreCircle full"
  />
  <div
    className="matchScoreCircle full"
  />
  <div
    className="matchScoreCircle full"
  />
  <div
    className="matchScoreCircle"
  />
  <div
    className="matchScoreCircle"
  />
</div>
`;

exports[`Storyshots Menu Menus 1`] = `
<div
  className="mainWrapper"
>
  <button
    aria-controls="dropdown-8"
    aria-disabled={false}
    aria-expanded={false}
    aria-haspopup={true}
    className="button buttonDefault"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
    role="button"
    tabIndex="0"
  >
    <span
      className=""
    >
      Menu dropdown
    </span>
  </button>
</div>
`;

exports[`Storyshots Modal Fullscreen 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open modal
  </span>
</button>
`;

exports[`Storyshots Modal Large 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open modal
  </span>
</button>
`;

exports[`Storyshots Modal Medium 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open modal
  </span>
</button>
`;

exports[`Storyshots Modal Scrollable 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open modal
  </span>
</button>
`;

exports[`Storyshots Modal Small 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open modal
  </span>
</button>
`;

exports[`Storyshots Pagination All Combined 1`] = `
<div
  className="my-pagination-class pagination"
  data-test-id="myPaginationTestId"
>
  <span
    className="sizes"
  >
    <div
      className="mainWrapper"
    >
      <button
        aria-controls="dropdown-14"
        aria-disabled={false}
        aria-expanded={false}
        aria-haspopup={true}
        aria-label="Selected page size"
        className="button buttonDefault buttonSize3 iconLeft"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
        role="button"
        tabIndex="0"
      >
        <span>
          <span
            aria-hidden={false}
            className="icon iconWrapper"
            role="presentation"
          >
            <svg
              role="presentation"
              style={
                Object {
                  "height": "16px",
                  "width": "16px",
                }
              }
              viewBox="0 0 24 24"
            >
              <path
                d="M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z"
                style={
                  Object {
                    "fill": "currentColor",
                  }
                }
              />
            </svg>
          </span>
          <span
            className="buttonText3"
          >
            page / 100
          </span>
        </span>
      </button>
    </div>
  </span>
  <span
    className="total"
  >
    400 Total
  </span>
  <button
    aria-disabled={false}
    aria-label="Previous"
    className="paginationButton button buttonDefault buttonSize3 iconLeft"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
  <ul
    className="pager"
  >
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          1
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          0
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={true}
        aria-disabled={false}
        aria-pressed={true}
        className="paginationButton active button buttonDefault buttonSize3"
        defaultChecked={true}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          4
        </span>
      </button>
    </li>
  </ul>
  <button
    aria-disabled={false}
    aria-label="Next"
    className="paginationButton button buttonDefault buttonSize3 iconLeft disabled"
    defaultChecked={false}
    disabled={true}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
  <span
    className="jump"
  >
    <div
      className="inputWrapper"
    >
      <input
        autoFocus={false}
        className="editor"
        defaultValue={4}
        disabled={false}
        id="input-15"
        minLength={1}
        onChange={[Function]}
        readOnly={false}
        required={false}
        role="textbox"
        tabIndex={0}
        type="number"
      />
    </div>
  </span>
</div>
`;

exports[`Storyshots Pagination Basic Few 1`] = `
<div
  className="my-pagination-class pagination"
  data-test-id="myPaginationTestId"
>
  <span />
  <button
    aria-disabled={false}
    aria-label="Previous"
    className="paginationButton button buttonDefault buttonSize3 iconLeft disabled"
    defaultChecked={false}
    disabled={true}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
  <ul
    className="pager"
  >
    <li>
      <button
        aria-checked={true}
        aria-disabled={false}
        aria-pressed={true}
        className="paginationButton active button buttonDefault buttonSize3"
        defaultChecked={true}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          1
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          0
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          5
        </span>
      </button>
    </li>
  </ul>
  <button
    aria-disabled={false}
    aria-label="Next"
    className="paginationButton button buttonDefault buttonSize3 iconLeft"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Pagination Basic Many 1`] = `
<div
  className="my-pagination-class pagination"
  data-test-id="myPaginationTestId"
>
  <span />
  <button
    aria-disabled={false}
    aria-label="Previous"
    className="paginationButton button buttonDefault buttonSize3 iconLeft disabled"
    defaultChecked={false}
    disabled={true}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
  <ul
    className="pager"
  >
    <li>
      <button
        aria-checked={true}
        aria-disabled={false}
        aria-pressed={true}
        className="paginationButton active button buttonDefault buttonSize3"
        defaultChecked={true}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          1
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          0
        </span>
      </button>
    </li>
    <li>
      <button
        aria-disabled={false}
        aria-label="Next 5"
        className="paginationButton quicknext button buttonDefault buttonSize3 iconLeft"
        defaultChecked={false}
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "16px",
                "width": "16px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          100
        </span>
      </button>
    </li>
  </ul>
  <button
    aria-disabled={false}
    aria-label="Next"
    className="paginationButton button buttonDefault buttonSize3 iconLeft"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Pagination Change Page Size 1`] = `
<div
  className="my-pagination-class pagination"
  data-test-id="myPaginationTestId"
>
  <span
    className="sizes"
  >
    <div
      className="mainWrapper"
    >
      <button
        aria-controls="dropdown-16"
        aria-disabled={false}
        aria-expanded={false}
        aria-haspopup={true}
        aria-label="Selected page size"
        className="button buttonDefault buttonSize3 iconLeft"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
        role="button"
        tabIndex="0"
      >
        <span>
          <span
            aria-hidden={false}
            className="icon iconWrapper"
            role="presentation"
          >
            <svg
              role="presentation"
              style={
                Object {
                  "height": "16px",
                  "width": "16px",
                }
              }
              viewBox="0 0 24 24"
            >
              <path
                d="M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z"
                style={
                  Object {
                    "fill": "currentColor",
                  }
                }
              />
            </svg>
          </span>
          <span
            className="buttonText3"
          >
            page / 100
          </span>
        </span>
      </button>
    </div>
  </span>
  <span />
  <button
    aria-disabled={false}
    aria-label="Previous"
    className="paginationButton button buttonDefault buttonSize3 iconLeft disabled"
    defaultChecked={false}
    disabled={true}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
  <ul
    className="pager"
  >
    <li>
      <button
        aria-checked={true}
        aria-disabled={false}
        aria-pressed={true}
        className="paginationButton active button buttonDefault buttonSize3"
        defaultChecked={true}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          1
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          0
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          10
        </span>
      </button>
    </li>
  </ul>
  <button
    aria-disabled={false}
    aria-label="Next"
    className="paginationButton button buttonDefault buttonSize3 iconLeft"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Pagination Dots 1`] = `
<div
  className="my-pagination-class pagination dots"
  data-test-id="myPaginationTestId"
>
  <span />
  <button
    aria-disabled={false}
    aria-label="Previous"
    className="paginationButton button buttonDefault buttonSize3 iconLeft disabled"
    defaultChecked={false}
    disabled={true}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
  <ul
    className="pager"
  >
    <li>
      <button
        aria-checked={true}
        aria-disabled={false}
        aria-pressed={true}
        className="paginationButton active button buttonDefault buttonSize3"
        defaultChecked={true}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          1
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          0
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          5
        </span>
      </button>
    </li>
  </ul>
  <button
    aria-disabled={false}
    aria-label="Next"
    className="paginationButton button buttonDefault buttonSize3 iconLeft"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Pagination Jump To 1`] = `
<div
  className="my-pagination-class pagination"
  data-test-id="myPaginationTestId"
>
  <span />
  <button
    aria-disabled={false}
    aria-label="Previous"
    className="paginationButton button buttonDefault buttonSize3 iconLeft"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
  <ul
    className="pager"
  >
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          1
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          0
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          10
        </span>
      </button>
    </li>
  </ul>
  <button
    aria-disabled={false}
    aria-label="Next"
    className="paginationButton button buttonDefault buttonSize3 iconLeft"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
  <span
    className="jump"
  >
    <div
      className="inputWrapper"
    >
      <input
        autoFocus={false}
        className="editor"
        defaultValue={5}
        disabled={false}
        id="input-17"
        minLength={1}
        onChange={[Function]}
        readOnly={false}
        required={false}
        role="textbox"
        tabIndex={0}
        type="number"
      />
    </div>
  </span>
</div>
`;

exports[`Storyshots Pagination Total Item Count 1`] = `
<div
  className="my-pagination-class pagination"
  data-test-id="myPaginationTestId"
>
  <span
    className="total"
  >
    1000 Total
  </span>
  <button
    aria-disabled={false}
    aria-label="Previous"
    className="paginationButton button buttonDefault buttonSize3 iconLeft disabled"
    defaultChecked={false}
    disabled={true}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
  <ul
    className="pager"
  >
    <li>
      <button
        aria-checked={true}
        aria-disabled={false}
        aria-pressed={true}
        className="paginationButton active button buttonDefault buttonSize3"
        defaultChecked={true}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          1
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          0
        </span>
      </button>
    </li>
    <li>
      <button
        aria-disabled={false}
        aria-label="Next 5"
        className="paginationButton quicknext button buttonDefault buttonSize3 iconLeft"
        defaultChecked={false}
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "16px",
                "width": "16px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
      </button>
    </li>
    <li>
      <button
        aria-checked={false}
        aria-disabled={false}
        aria-pressed={false}
        className="paginationButton button buttonDefault buttonSize3"
        defaultChecked={false}
        disabled={false}
        onClick={[Function]}
      >
        <span
          className="buttonText3"
        >
          100
        </span>
      </button>
    </li>
  </ul>
  <button
    aria-disabled={false}
    aria-label="Next"
    className="paginationButton button buttonDefault buttonSize3 iconLeft"
    defaultChecked={false}
    disabled={false}
    onClick={[Function]}
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "16px",
            "width": "16px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
  </button>
</div>
`;

exports[`Storyshots Panel Bottom 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open panel
  </span>
</button>
`;

exports[`Storyshots Panel Large 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open panel
  </span>
</button>
`;

exports[`Storyshots Panel Left 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open panel
  </span>
</button>
`;

exports[`Storyshots Panel Medium 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open panel
  </span>
</button>
`;

exports[`Storyshots Panel Small 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open panel
  </span>
</button>
`;

exports[`Storyshots Panel Stacked 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open panel
  </span>
</button>
`;

exports[`Storyshots Panel Top 1`] = `
<button
  aria-disabled={false}
  className="button buttonPrimary"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className=""
  >
    Open panel
  </span>
</button>
`;

exports[`Storyshots Pill Closable 1`] = `
<div
  className="stack vertical l"
  style={
    Object {
      "alignItems": undefined,
      "flexWrap": undefined,
      "justifyContent": undefined,
    }
  }
>
  <div
    className="tagPills red"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      red
    </span>
    <button
      aria-disabled={false}
      aria-label="Close"
      className="closeButton button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
  <div
    className="tagPills orange"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      orange
    </span>
    <button
      aria-disabled={false}
      aria-label="Close"
      className="closeButton button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
  <div
    className="tagPills yellow"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      yellow
    </span>
    <button
      aria-disabled={false}
      aria-label="Close"
      className="closeButton button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
  <div
    className="tagPills green"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      green
    </span>
    <button
      aria-disabled={false}
      aria-label="Close"
      className="closeButton button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
  <div
    className="tagPills bluegreen"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      bluegreen
    </span>
    <button
      aria-disabled={false}
      aria-label="Close"
      className="closeButton button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
  <div
    className="tagPills blue"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      blue
    </span>
    <button
      aria-disabled={false}
      aria-label="Close"
      className="closeButton button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
  <div
    className="tagPills violet"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      violet
    </span>
    <button
      aria-disabled={false}
      aria-label="Close"
      className="closeButton button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
  <div
    className="tagPills grey"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      grey
    </span>
    <button
      aria-disabled={false}
      aria-label="Close"
      className="closeButton button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Pill Default 1`] = `
<div
  className="stack vertical l"
  style={
    Object {
      "alignItems": undefined,
      "flexWrap": undefined,
      "justifyContent": undefined,
    }
  }
>
  <div
    className="tagPills red"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      red
    </span>
  </div>
  <div
    className="tagPills orange"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      orange
    </span>
  </div>
  <div
    className="tagPills yellow"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      yellow
    </span>
  </div>
  <div
    className="tagPills green"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      green
    </span>
  </div>
  <div
    className="tagPills bluegreen"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      bluegreen
    </span>
  </div>
  <div
    className="tagPills blue"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      blue
    </span>
  </div>
  <div
    className="tagPills violet"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      violet
    </span>
  </div>
  <div
    className="tagPills grey"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      grey
    </span>
  </div>
</div>
`;

exports[`Storyshots Pill With Button 1`] = `
<div
  className="stack vertical l"
  style={
    Object {
      "alignItems": undefined,
      "flexWrap": undefined,
      "justifyContent": undefined,
    }
  }
>
  <div
    className="tagPills red"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      red
    </span>
    <button
      aria-disabled={false}
      aria-label="Thumbs up"
      className="button button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText2"
        >
          2
        </span>
      </span>
    </button>
  </div>
  <div
    className="tagPills orange"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      orange
    </span>
    <button
      aria-disabled={false}
      aria-label="Thumbs up"
      className="button button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText2"
        >
          2
        </span>
      </span>
    </button>
  </div>
  <div
    className="tagPills yellow"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      yellow
    </span>
    <button
      aria-disabled={false}
      aria-label="Thumbs up"
      className="button button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText2"
        >
          2
        </span>
      </span>
    </button>
  </div>
  <div
    className="tagPills green"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      green
    </span>
    <button
      aria-disabled={false}
      aria-label="Thumbs up"
      className="button button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText2"
        >
          2
        </span>
      </span>
    </button>
  </div>
  <div
    className="tagPills bluegreen"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      bluegreen
    </span>
    <button
      aria-disabled={false}
      aria-label="Thumbs up"
      className="button button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText2"
        >
          2
        </span>
      </span>
    </button>
  </div>
  <div
    className="tagPills blue"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      blue
    </span>
    <button
      aria-disabled={false}
      aria-label="Thumbs up"
      className="button button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText2"
        >
          2
        </span>
      </span>
    </button>
  </div>
  <div
    className="tagPills violet"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      violet
    </span>
    <button
      aria-disabled={false}
      aria-label="Thumbs up"
      className="button button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText2"
        >
          2
        </span>
      </span>
    </button>
  </div>
  <div
    className="tagPills grey"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      className="label"
    >
      grey
    </span>
    <button
      aria-disabled={false}
      aria-label="Thumbs up"
      className="button button buttonDefault buttonSize2 iconLeft"
      defaultChecked={false}
      disabled={false}
    >
      <span>
        <span
          aria-hidden={false}
          className="icon iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
        <span
          className="buttonText2"
        >
          2
        </span>
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Pill With Icon 1`] = `
<div
  className="stack vertical l"
  style={
    Object {
      "alignItems": undefined,
      "flexWrap": undefined,
      "justifyContent": undefined,
    }
  }
>
  <div
    className="tagPills red"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className="label"
    >
      red
    </span>
  </div>
  <div
    className="tagPills orange"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className="label"
    >
      orange
    </span>
  </div>
  <div
    className="tagPills yellow"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className="label"
    >
      yellow
    </span>
  </div>
  <div
    className="tagPills green"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className="label"
    >
      green
    </span>
  </div>
  <div
    className="tagPills bluegreen"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className="label"
    >
      bluegreen
    </span>
  </div>
  <div
    className="tagPills blue"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className="label"
    >
      blue
    </span>
  </div>
  <div
    className="tagPills violet"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className="label"
    >
      violet
    </span>
  </div>
  <div
    className="tagPills grey"
    style={
      Object {
        "color": undefined,
      }
    }
  >
    <span
      aria-hidden={false}
      className="icon iconWrapper"
      role="presentation"
    >
      <svg
        role="presentation"
        style={
          Object {
            "height": "20px",
            "width": "20px",
          }
        }
        viewBox="0 0 24 24"
      >
        <path
          d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z"
          style={
            Object {
              "fill": "currentColor",
            }
          }
        />
      </svg>
    </span>
    <span
      className="label"
    >
      grey
    </span>
  </div>
</div>
`;

exports[`Storyshots Portal Default 1`] = `<div />`;

exports[`Storyshots Radio Button Radio Button 1`] = `
<div
  className="selector"
>
  <input
    aria-label="Label"
    checked={true}
    disabled={false}
    id="myRadioButtonId"
    name="myRadioButtonName"
    onClick={[Function]}
    readOnly={true}
    tabIndex={-1}
    type="radio"
    value="Label"
  />
  <label
    className=""
    htmlFor="myRadioButtonId"
  >
    <span
      className="radioButton"
      id="myRadioButtonId-custom-radio"
      tabIndex={0}
    />
    <span
      className="selectorLabel"
    >
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots Radio Button Radio Group 1`] = `
<div
  onKeyDown={[Function]}
>
  <div
    className="selector"
  >
    <input
      checked={false}
      disabled={false}
      id="oea2exk-1"
      name="group"
      onClick={[Function]}
      readOnly={true}
      tabIndex={-1}
      type="radio"
      value="Radio1"
    />
    <label
      className=""
      htmlFor="oea2exk-1"
    >
      <span
        className="radioButton"
        id="oea2exk-1-custom-radio"
        tabIndex={0}
      />
      <span
        className="selectorLabel"
      >
        Radio1
      </span>
    </label>
  </div>
  <div
    className="selector"
  >
    <input
      checked={false}
      disabled={false}
      id="oea2exk-2"
      name="group"
      onClick={[Function]}
      readOnly={true}
      tabIndex={-1}
      type="radio"
      value="Radio2"
    />
    <label
      className=""
      htmlFor="oea2exk-2"
    >
      <span
        className="radioButton"
        id="oea2exk-2-custom-radio"
        tabIndex={0}
      />
      <span
        className="selectorLabel"
      >
        Radio2
      </span>
    </label>
  </div>
  <div
    className="selector"
  >
    <input
      checked={false}
      disabled={false}
      id="oea2exk-3"
      name="group"
      onClick={[Function]}
      readOnly={true}
      tabIndex={-1}
      type="radio"
      value="Radio3"
    />
    <label
      className=""
      htmlFor="oea2exk-3"
    >
      <span
        className="radioButton"
        id="oea2exk-3-custom-radio"
        tabIndex={0}
      />
      <span
        className="selectorLabel"
      >
        Radio3
      </span>
    </label>
  </div>
</div>
`;

exports[`Storyshots Select Basic 1`] = `
<div>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "200px",
        "margin": "0 auto",
        "width": "200px",
      }
    }
  >
    <div
      className="selectWrapper octuple-select-class"
      style={Object {}}
    >
      <div
        className="selectDropdownMainWrapper mainWrapper"
      >
        <div
          className="inputWrapper inputStretch"
        >
          <input
            aria-controls="dropdown-18"
            aria-expanded={false}
            aria-haspopup={true}
            autoFocus={false}
            className="selectInput withIcon inputStretch"
            disabled={false}
            id="input-19"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Select"
            readOnly={true}
            required={false}
            role="textbox"
            tabIndex={0}
            type="text"
          />
          <div
            className="iconWrapper leftIcon"
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M7,10L12,15L17,10H7Z"
                  style={
                    Object {
                      "fill": "currentColor",
                    }
                  }
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Disabled 1`] = `
<div>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "200px",
        "margin": "0 auto",
        "width": "200px",
      }
    }
  >
    <div
      className="selectWrapper octuple-select-class"
      style={Object {}}
    >
      <div
        className="selectDropdownMainWrapper mainWrapper"
      >
        <div
          className="inputWrapper inputStretch"
        >
          <input
            aria-controls="dropdown-20"
            aria-expanded={false}
            aria-haspopup={true}
            autoFocus={false}
            className="selectInput withIcon inputStretch"
            disabled={true}
            id="input-21"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Select"
            readOnly={true}
            required={false}
            role="textbox"
            tabIndex={0}
            type="text"
          />
          <div
            className="iconWrapper leftIcon"
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M7,10L12,15L17,10H7Z"
                  style={
                    Object {
                      "fill": "currentColor",
                    }
                  }
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Dynamic 1`] = `
<div
  className="selectWrapper"
>
  <div
    className="selectDropdownMainWrapper mainWrapper"
  >
    <div
      className="inputWrapper inputStretch"
    >
      <input
        aria-controls="dropdown-22"
        aria-expanded={false}
        aria-haspopup={true}
        autoFocus={false}
        className="selectInputFilterable withIcon inputStretch"
        disabled={false}
        id="input-23"
        onChange={[Function]}
        onClick={[Function]}
        placeholder="Select"
        readOnly={false}
        required={false}
        role="textbox"
        tabIndex={0}
        type="text"
      />
      <div
        className="iconWrapper leftIcon"
      >
        <span
          aria-hidden={false}
          className="iconWrapper"
          role="presentation"
        >
          <svg
            role="presentation"
            style={
              Object {
                "height": "20px",
                "width": "20px",
              }
            }
            viewBox="0 0 24 24"
          >
            <path
              d="M7,10L12,15L17,10H7Z"
              style={
                Object {
                  "fill": "currentColor",
                }
              }
            />
          </svg>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Filterable 1`] = `
<div>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "200px",
        "margin": "0 auto",
        "width": "200px",
      }
    }
  >
    <div
      className="selectWrapper octuple-select-class"
      style={Object {}}
    >
      <div
        className="selectDropdownMainWrapper mainWrapper"
      >
        <div
          className="inputWrapper inputStretch"
        >
          <input
            aria-controls="dropdown-24"
            aria-expanded={false}
            aria-haspopup={true}
            autoFocus={false}
            className="selectInputFilterable withIcon inputStretch"
            disabled={false}
            id="input-25"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Select"
            readOnly={false}
            required={false}
            role="textbox"
            tabIndex={0}
            type="text"
          />
          <div
            className="iconWrapper leftIcon"
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M7,10L12,15L17,10H7Z"
                  style={
                    Object {
                      "fill": "currentColor",
                    }
                  }
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Multiple 1`] = `
<div>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "200px",
        "margin": "0 auto",
        "width": "200px",
      }
    }
  >
    <div
      className="selectWrapper octuple-select-class"
      style={Object {}}
    >
      <div
        className="selectDropdownMainWrapper mainWrapper"
      >
        <div
          className="inputWrapper inputStretch"
        >
          <input
            aria-controls="dropdown-26"
            aria-expanded={false}
            aria-haspopup={true}
            autoFocus={false}
            className="selectInputFilterable withIcon inputStretch"
            disabled={false}
            id="input-27"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Select"
            readOnly={false}
            required={false}
            role="textbox"
            tabIndex={0}
            type="text"
          />
          <div
            className="iconWrapper leftIcon"
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M7,10L12,15L17,10H7Z"
                  style={
                    Object {
                      "fill": "currentColor",
                    }
                  }
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Multiple With No Filter 1`] = `
<div>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "200px",
        "margin": "0 auto",
        "width": "200px",
      }
    }
  >
    <div
      className="selectWrapper octuple-select-class"
      style={Object {}}
    >
      <div
        className="selectDropdownMainWrapper mainWrapper"
      >
        <div
          className="inputWrapper inputStretch"
        >
          <input
            aria-controls="dropdown-28"
            aria-expanded={false}
            aria-haspopup={true}
            autoFocus={false}
            className="selectInput withIcon inputStretch"
            disabled={false}
            id="input-29"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Select"
            readOnly={true}
            required={false}
            role="textbox"
            tabIndex={0}
            type="text"
          />
          <div
            className="iconWrapper leftIcon"
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M7,10L12,15L17,10H7Z"
                  style={
                    Object {
                      "fill": "currentColor",
                    }
                  }
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Options Disabled 1`] = `
<div>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "200px",
        "margin": "0 auto",
        "width": "200px",
      }
    }
  >
    <div
      className="selectWrapper octuple-select-class"
      style={Object {}}
    >
      <div
        className="selectDropdownMainWrapper mainWrapper"
      >
        <div
          className="inputWrapper inputStretch"
        >
          <input
            aria-controls="dropdown-30"
            aria-expanded={false}
            aria-haspopup={true}
            autoFocus={false}
            className="selectInput withIcon inputStretch"
            disabled={false}
            id="input-31"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Select"
            readOnly={true}
            required={false}
            role="textbox"
            tabIndex={0}
            type="text"
          />
          <div
            className="iconWrapper leftIcon"
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M7,10L12,15L17,10H7Z"
                  style={
                    Object {
                      "fill": "currentColor",
                    }
                  }
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select With Clear 1`] = `
<div>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "200px",
        "margin": "0 auto",
        "width": "200px",
      }
    }
  >
    <div
      className="selectWrapper octuple-select-class"
      style={Object {}}
    >
      <div
        className="selectDropdownMainWrapper mainWrapper"
      >
        <div
          className="inputWrapper inputStretch"
        >
          <input
            aria-controls="dropdown-32"
            aria-expanded={false}
            aria-haspopup={true}
            autoFocus={false}
            className="selectInput withIcon inputStretch"
            disabled={false}
            id="input-33"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Select"
            readOnly={true}
            required={false}
            role="textbox"
            tabIndex={0}
            type="text"
          />
          <div
            className="iconWrapper leftIcon"
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M7,10L12,15L17,10H7Z"
                  style={
                    Object {
                      "fill": "currentColor",
                    }
                  }
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select With Default Value 1`] = `
<div>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": "200px",
        "margin": "0 auto",
        "width": "200px",
      }
    }
  >
    <div
      className="selectWrapper octuple-select-class"
      style={Object {}}
    >
      <div
        className="selectDropdownMainWrapper mainWrapper"
      >
        <div
          className="inputWrapper inputStretch"
        >
          <input
            aria-controls="dropdown-34"
            aria-expanded={false}
            aria-haspopup={true}
            autoFocus={false}
            className="selectInput withIcon inputStretch"
            disabled={false}
            id="input-35"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Select"
            readOnly={true}
            required={false}
            role="textbox"
            tabIndex={0}
            type="text"
          />
          <div
            className="iconWrapper leftIcon"
          >
            <span
              aria-hidden={false}
              className="iconWrapper"
              role="presentation"
            >
              <svg
                role="presentation"
                style={
                  Object {
                    "height": "20px",
                    "width": "20px",
                  }
                }
                viewBox="0 0 24 24"
              >
                <path
                  d="M7,10L12,15L17,10H7Z"
                  style={
                    Object {
                      "fill": "currentColor",
                    }
                  }
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Snack Bar Closable 1`] = `
<button
  aria-disabled={false}
  className="button buttonDefault buttonSize3"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className="buttonText3"
  >
    Serve closable snack
  </span>
</button>
`;

exports[`Storyshots Snack Bar Default 1`] = `
<button
  aria-disabled={false}
  className="button buttonDefault buttonSize3"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className="buttonText3"
  >
    Serve snack
  </span>
</button>
`;

exports[`Storyshots Snack Bar With Action 1`] = `
<button
  aria-disabled={false}
  className="button buttonDefault buttonSize3"
  defaultChecked={false}
  disabled={false}
  onClick={[Function]}
>
  <span
    className="buttonText3"
  >
    Serve snack with action
  </span>
</button>
`;

exports[`Storyshots Spinner Default 1`] = `
<span
  aria-hidden={false}
  className="spinner my-spinner-class iconWrapper"
  role="presentation"
>
  <svg
    role="presentation"
    style={
      Object {
        "height": "48px",
        "width": "48px",
      }
    }
    viewBox="0 0 24 24"
  >
    <style>
      @keyframes spin { to { transform: rotate(360deg) } }
    </style>
    <g
      style={
        Object {
          "animation": "spin linear 0.8s infinite",
          "transformOrigin": "center",
        }
      }
    >
      <path
        d="M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z"
        style={
          Object {
            "fill": "currentColor",
          }
        }
      />
      <rect
        fill="transparent"
        height="24"
        width="24"
      />
    </g>
  </svg>
</span>
`;

exports[`Storyshots Stack Horizontal 1`] = `
<div
  className="stack my-stack-class horizontal m"
  style={
    Object {
      "alignItems": "",
      "backgroundColor": "aquamarine",
      "flexWrap": "",
      "justifyContent": "",
    }
  }
>
  <div
    style={
      Object {
        "backgroundColor": "mediumpurple",
        "height": "200px",
        "width": "200px",
      }
    }
  />
  <div
    style={
      Object {
        "backgroundColor": "mediumpurple",
        "height": "200px",
        "width": "200px",
      }
    }
  />
  <div
    style={
      Object {
        "backgroundColor": "mediumpurple",
        "height": "200px",
        "width": "200px",
      }
    }
  />
</div>
`;

exports[`Storyshots Stack Responsive 1`] = `
<div
  className="stack my-stack-class vertical l"
  style={
    Object {
      "alignItems": "",
      "backgroundColor": "aquamarine",
      "flexWrap": "",
      "justifyContent": "",
    }
  }
>
  <div
    style={
      Object {
        "backgroundColor": "mediumpurple",
        "height": "200px",
        "width": "200px",
      }
    }
  />
  <div
    style={
      Object {
        "backgroundColor": "mediumpurple",
        "height": "200px",
        "width": "200px",
      }
    }
  />
  <div
    style={
      Object {
        "backgroundColor": "mediumpurple",
        "height": "200px",
        "width": "200px",
      }
    }
  />
</div>
`;

exports[`Storyshots Stack Sample Nav List 1`] = `
<div
  className="stack navListContainer horizontal"
  style={
    Object {
      "alignItems": "",
      "flexWrap": "wrap",
      "justifyContent": "",
    }
  }
>
  <div
    className="stack group vertical m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
      }
    }
  >
    <h3>
      Title
    </h3>
    <div
      className="stack vertical xs"
      style={
        Object {
          "alignItems": undefined,
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
    </div>
  </div>
  <div
    className="stack group vertical m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
      }
    }
  >
    <h3>
      Title
    </h3>
    <div
      className="stack vertical xs"
      style={
        Object {
          "alignItems": undefined,
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
    </div>
  </div>
  <div
    className="stack group vertical m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
      }
    }
  >
    <h3>
      Title
    </h3>
    <div
      className="stack vertical xs"
      style={
        Object {
          "alignItems": undefined,
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
    </div>
  </div>
  <div
    className="stack group vertical m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
      }
    }
  >
    <h3>
      Title
    </h3>
    <div
      className="stack vertical xs"
      style={
        Object {
          "alignItems": undefined,
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
    </div>
  </div>
  <div
    className="stack group vertical m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
      }
    }
  >
    <h3>
      Title
    </h3>
    <div
      className="stack vertical xs"
      style={
        Object {
          "alignItems": undefined,
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
    </div>
  </div>
  <div
    className="stack group vertical m"
    style={
      Object {
        "alignItems": undefined,
        "flexWrap": undefined,
        "justifyContent": undefined,
      }
    }
  >
    <h3>
      Title
    </h3>
    <div
      className="stack vertical xs"
      style={
        Object {
          "alignItems": undefined,
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
      <p>
        subheading
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Stack Vertical 1`] = `
<div
  className="stack my-stack-class vertical l"
  style={
    Object {
      "alignItems": "",
      "backgroundColor": "aquamarine",
      "flexWrap": "",
      "justifyContent": "",
    }
  }
>
  <div
    style={
      Object {
        "backgroundColor": "mediumpurple",
        "height": "200px",
        "width": "200px",
      }
    }
  />
  <div
    style={
      Object {
        "backgroundColor": "mediumpurple",
        "height": "200px",
        "width": "200px",
      }
    }
  />
  <div
    style={
      Object {
        "backgroundColor": "mediumpurple",
        "height": "200px",
        "width": "200px",
      }
    }
  />
</div>
`;

exports[`Storyshots Tabs Default 1`] = `
<div>
  <div
    className="tabWrap"
    role="tablist"
    style={Object {}}
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 1
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 2
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 3
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 4
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tabs Icon 1`] = `
<div>
  <div
    className="tabWrap"
    role="tablist"
    style={Object {}}
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tabs Icon Label 1`] = `
<div>
  <div
    className="tabWrap"
    role="tablist"
    style={Object {}}
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className="label"
      >
        Tab 1
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className="label"
      >
        Tab 2
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className="label"
      >
        Tab 3
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className="label"
      >
        Tab 4
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tabs Pill Default 1`] = `
<div>
  <div
    className="tabWrap pill"
    role="tablist"
    style={Object {}}
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 1
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 2
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 3
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 4
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tabs Pill Icon 1`] = `
<div>
  <div
    className="tabWrap pill"
    role="tablist"
    style={Object {}}
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tabs Pill Icon Label 1`] = `
<div>
  <div
    className="tabWrap pill"
    role="tablist"
    style={Object {}}
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className="label"
      >
        Tab 1
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className="label"
      >
        Tab 2
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className="label"
      >
        Tab 3
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        aria-hidden={false}
        className="icon iconWrapper"
        role="presentation"
      >
        <svg
          role="presentation"
          style={
            Object {
              "height": "20px",
              "width": "20px",
            }
          }
          viewBox="0 0 24 24"
        >
          <path
            d="M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z"
            style={
              Object {
                "fill": "currentColor",
              }
            }
          />
        </svg>
      </span>
      <span
        className="label"
      >
        Tab 4
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tabs Pill With Badge 1`] = `
<div>
  <div
    className="tabWrap pill"
    role="tablist"
    style={Object {}}
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 1
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
      <span
        className="badge header6 badge active"
      >
        1
      </span>
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 2
      </span>
      <span
        className="badge header6 badge"
      >
        2
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 3
      </span>
      <span
        className="badge header6 badge"
      >
        3
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 4
      </span>
      <span
        className="badge header6 badge"
      >
        4
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tabs Scrollable 1`] = `
<div>
  <div
    className="tabWrap scrollable"
    role="tablist"
    style={
      Object {
        "maxWidth": "400px",
      }
    }
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 1
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 2
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 3
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 4
      </span>
    </button>
    <button
      aria-label="Tab 5"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 5
      </span>
    </button>
    <button
      aria-label="Tab 6"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 6
      </span>
    </button>
    <button
      aria-label="Tab 7"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 7
      </span>
    </button>
    <button
      aria-label="Tab 8"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 8
      </span>
    </button>
    <button
      aria-label="Tab 9"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 9
      </span>
    </button>
    <button
      aria-label="Tab 10"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 10
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tabs Small 1`] = `
<div>
  <div
    className="tabWrap small"
    role="tablist"
    style={Object {}}
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 1
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 2
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 3
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 4
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tabs With Badge 1`] = `
<div>
  <div
    className="tabWrap"
    role="tablist"
    style={Object {}}
    value="tab1"
  >
    <button
      aria-label="Tab 1"
      aria-selected={true}
      className="tab active"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 1
      </span>
      <div
        className="tabIndicator"
        data-flip-config="{\\"translate\\":true,\\"scale\\":true,\\"opacity\\":true}"
        data-flip-id="tabIndicator"
        data-portal-key="portal"
      />
      <span
        className="badge header6 badge active"
      >
        1
      </span>
    </button>
    <button
      aria-label="Tab 2"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 2
      </span>
      <span
        className="badge header6 badge"
      >
        2
      </span>
    </button>
    <button
      aria-label="Tab 3"
      aria-selected={false}
      className="tab"
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 3
      </span>
      <span
        className="badge header6 badge"
      >
        3
      </span>
    </button>
    <button
      aria-label="Tab 4"
      aria-selected={false}
      className="tab"
      disabled={true}
      onClick={[Function]}
      role="tab"
    >
      <span
        className="label"
      >
        Tab 4
      </span>
      <span
        className="badge header6 badge"
      >
        4
      </span>
    </button>
  </div>
</div>
`;

exports[`Storyshots Tooltip Tooltips 1`] = `
Array [
  <div
    className="referenceWrapper"
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <button
      aria-disabled={false}
      aria-label="Show Tooltip"
      className="button buttonPrimary buttonSize2"
      defaultChecked={false}
      disabled={false}
    >
      <span
        className="buttonText2"
      >
        Show Tooltip
      </span>
    </button>
  </div>,
  <div
    aria-hidden={true}
    className="my-tooltip-class tooltip bottom"
    role="tooltip"
    style={
      Object {
        "left": "",
        "position": "absolute",
        "top": "",
      }
    }
    tabIndex={0}
  >
    This is a Tooltip.
    <div
      className="arrow"
      style={
        Object {
          "left": "",
          "position": "absolute",
          "top": "-4px",
        }
      }
    />
  </div>,
]
`;
