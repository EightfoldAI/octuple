review:
  guidelines:
  - path: '**'
    guideline: Catch and correct any obvious bugs.
  - path: src/components/InlineSvg/**/*.tsx
    guideline: Use enums for defining prop types and variant options in components
    to ensure type safety and consistency across the codebase.
  - path: "src/*"
    guideline: "Do not leave in commented out code. Delete it."
  - path: "*"
    guideline: "Correct grammar and spelling mistakes. Do not comment on writing style. Allow for flexible capitalization and abbreviation for variable names."
  - path: "*.ts"
    guideline: "Follow our TypeScript style guide."
    context_document_path: "https://google.github.io/styleguide/tsguide.html"
  - path: "*.tsx"
    guideline: >
      Follow our React style guide.
      Use 2 spaces for indentation.
      Use 80 characters for line length.
      Use type hints.
      Use type guards to check for types.
      Use type checking to validate data.
      Make sure relative imports are used when possible.
      Use style modules when possible.
      single quotes are preferred over double quotes.
      Use camelCase for variable names.
      export default components.
      Use native functions instead of lodash.
      Make sure the folder structure is followed.
      Add 'use client' directive at the top of client-side components.
      Use React.forwardRef for components that need ref forwarding.
      Use FC<PropType> type annotation for functional components.
      Use mergeClasses utility for combining class names.
      Import styles using 'import styles from './componentname.module.scss'.
      Follow accessibility best practices with appropriate ARIA attributes and roles.
      Provide meaningful alt text for images and icons.
      Ensure proper heading hierarchy with appropriate aria-level attributes.
      Implement proper focus management for modals and dialogs (trap focus when open, restore focus on close).
      Ensure keyboard navigability with logical tab order and custom key handlers when needed.
      Maintain sufficient color contrast (WCAG AA minimum) between text and backgrounds.
      Use aria-live regions for dynamically changing content that should be announced to screen readers.
      Ensure touch targets are at least 44x44px for mobile interactions.
      Give all interactive elements appropriate accessible names.
      Maintain accessibility across all viewport sizes with responsive design.
      Use ThemeContextProvider for themeable components.
      Follow existing patterns for component props interfaces.
    context_document_path: "https://google.github.io/styleguide/tsguide.html"
  - path: "src/**/*.scss"
    guideline: >
      Follow BEM naming convention for CSS classes.
      Use variables from the design system for colors, spacing, and typography.
      Avoid hardcoded values for dimensions, use variables instead.
      Use nesting for related styles, but avoid excessive nesting.
      Keep selectors as simple as possible.
      Use camelCase for SCSS variables.
  - path: "src/hooks/*.ts"
    guideline: >
      Add 'use client' directive at the top of client-side hooks.
      Export hooks as named exports.
      Use TypeScript generics for type-safe hooks when appropriate.
      Add JSDoc comments to describe hook functionality.
      Return consistent values from hooks.
  - path: "src/**/*.types.ts"
    guideline: >
      Use interfaces for component props.
      Prefer enums for component variants, modes, and sizes.
      Export all types and interfaces.
      Use descriptive names for types and interfaces.
      Use proper JSDoc comments to document types.
      Follow TypeScript best practices for unions, intersections, and optional properties.
  - path: "src/shared/utilities/*.ts"
    guideline: >
      Create reusable utilities for common operations.
      Add proper JSDoc comments for each utility function.
      Export utilities as named exports.
      Write thorough type annotations for parameters and return values.
      Follow functional programming patterns when applicable.
  - path: "**/__tests__/*.test.tsx"
    guideline: >
      Write tests with proper describes and it blocks.
      Test component rendering, behavior, and accessibility.
      Mock dependencies appropriately.
      Use testing library best practices.
      Ensure good test coverage for components.
  - path: "*.css"
    guideline: "Follow our CSS style guide."
    context_document_path: "https://google.github.io/styleguide/htmlcssguide.html"
  - path: "*.html"
    guideline: "Follow our HTML style guide."
    context_document_path: "https://google.github.io/styleguide/htmlcssguide.html"
  - path: "*.js"
    guideline: "Follow our JavaScript style guide."
    context_document_path: "https://google.github.io/styleguide/jsguide.html"
